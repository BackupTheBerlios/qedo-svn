# Qedo - Quality of Service Enabled Distributed Objects 
#                                                     
# http://qedo.berlios.de/                            
#                                                   
# Copyright (C) 2002-2003 by the Qedo Team         
#                                                 
# This library is free software; you can redistribute it and/or 
# modify it under the terms of the GNU Lesser General Public   
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#                                                                  
# This library is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
# Lesser General Public License for more details.                 
#                                                                
# You should have received a copy of the GNU Lesser General Public 
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA 

.NOTPARALLEL:

CXX = @CXX@
INCLUDES+=-I. -I../../CIDL_Repository/IFRidl \
          -I../../CIDL_Repository/ComponentRepositoryLib\
          -I../../CIDL_Repository/CIDLRepositoryLib\
			 -DKC_DEPRECATED -DYYERROR_VERBOSE -DYYDEBUG \
          @CPPFLAGS@ 
CXXFLAGS+=$(INCLUDES) @DEFS@ @CXXFLAGS@
CXXCOMPILE=@CXX@ $(CXXFLAGS)
LIBS=@LIBS@

@SET_MAKE@

KIMWITU_FILES = tree.k frontend.k symtab.k error.k printer.k options.k resolve_symtab.k cg_io.k debug.k util.k global.k attributes.k pretty.k repository.k cidl_attributes.k
KIMWITU_HEADER_FILES = $(KIMWITU_FILES:.k=.h) k.h unpk.h yystype.h
KIMWITU_CPP_FILES = $(KIMWITU_FILES:.k=.cpp) k.cpp unpk.cpp
KIMWITU_OBJECT_FILES = $(KIMWITU_CPP_FILES:.cpp=.o)

SOURCES = cidl.cpp \
			lexana.cpp \
			version.cpp \
			getopt.cpp \
			getopt1.cpp 


FULL_CLEAN_FILES = $(KIMWITU_HEADER_FILES) $(KIMWITU_CPP_FILES) \
                   cidl.cpp cidl.h cidl.output lexana.cpp \
                   errmsg.cpp errmsg.h \
				       lexana.cpp \
                   .kc_timestamp 

CLEAN_FILES = $(KIMWITU_OBJECT_FILES) $(SOURCES:%.cpp=%.o) \
				  libComponentIDL.a

include ../../MakeVars

.PHONY:all

all: libCIDLFrontendLib.a

libCIDLFrontendLib.a : $(KIMWITU_OBJECT_FILES) $(SOURCES:%.cpp=%.o)

$(KIMWITU_HEADER_FILES) $(KIMWITU_CPP_FILES) : .kc_timestamp

.kc_timestamp : $(KIMWITU_FILES)
	$(KC_PP) --no-csgio --no-rewrite --no-printdot --yystype --suffix=cpp \
	$(KIMWITU_FILES)
	date > .kc_timestamp

lexana.cpp : lexana.l errmsg.cpp
	$(LEX) -Sflex.skel -tw lexana.l > lexana.cpp

cidl.cpp cidl.h cidl.output : k.h yystype.h cidl.y
	env LC_ALL=C $(YACC) -y -v -d -o cidl.cpp cidl.y
	@mv cidl.hpp cidl.h

errmsg.cpp errmsg.h: cidl.output errmsg.py
	echo "extern char *error_message[];" > errmsg.h
	$(PYTHON) errmsg.py < cidl.output > errmsg.cpp
