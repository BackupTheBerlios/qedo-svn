//
// generated by Qedo
//

#include "dinner_PhilosopherImpl.h"


// BEGIN USER INSERT SECTION file
// END USER INSERT SECTION file


namespace dinner {


// BEGIN USER INSERT SECTION PhilosopherSessionImpl
// END USER INSERT SECTION PhilosopherSessionImpl


PhilosopherSessionImpl::PhilosopherSessionImpl()
{
// BEGIN USER INSERT SECTION PhilosopherSessionImpl::PhilosopherSessionImpl
// END USER INSERT SECTION PhilosopherSessionImpl::PhilosopherSessionImpl
}


PhilosopherSessionImpl::~PhilosopherSessionImpl()
{
// BEGIN USER INSERT SECTION PhilosopherSessionImpl::~PhilosopherSessionImpl
// END USER INSERT SECTION PhilosopherSessionImpl::~PhilosopherSessionImpl

}


void
PhilosopherSessionImpl::set_context(::DiningPhilosophers::CCM_Philosopher_ContextImpl_ptr context)
    throw (CORBA::SystemException, Components::CCMException)
{
    context_ = ::DiningPhilosophers::CCM_Philosopher_ContextImpl::_duplicate(context);
}


void
PhilosopherSessionImpl::configuration_complete()
    throw (CORBA::SystemException, Components::InvalidConfiguration)
{
// BEGIN USER INSERT SECTION PhilosopherSessionImpl::configuration_complete
// END USER INSERT SECTION PhilosopherSessionImpl::configuration_complete
}


void
PhilosopherSessionImpl::remove()
    throw (CORBA::SystemException)
{
// BEGIN USER INSERT SECTION PhilosopherSessionImpl::remove
// END USER INSERT SECTION PhilosopherSessionImpl::remove
}


void
PhilosopherSessionImpl::name(const char* param)
	throw(CORBA::SystemException)
{
// BEGIN USER INSERT SECTION PhilosopherSessionImpl::_name
	id_ = CORBA::string_dup(param);
// END USER INSERT SECTION PhilosopherSessionImpl::_name
}


char*
PhilosopherSessionImpl::name()
	throw(CORBA::SystemException)
{
// BEGIN USER INSERT SECTION PhilosopherSessionImpl::name
    return CORBA::string_dup(id_.c_str());
// END USER INSERT SECTION PhilosopherSessionImpl::name
}


// BEGIN USER INSERT SECTION PhilosopherImpl
// END USER INSERT SECTION PhilosopherImpl


PhilosopherImpl::PhilosopherImpl()
:component_(new PhilosopherSessionImpl())
{
// BEGIN USER INSERT SECTION PhilosopherImpl::PhilosopherImpl
// END USER INSERT SECTION PhilosopherImpl::PhilosopherImpl
}


PhilosopherImpl::~PhilosopherImpl()
{
// BEGIN USER INSERT SECTION PhilosopherImpl::~PhilosopherImpl
// END USER INSERT SECTION PhilosopherImpl::~PhilosopherImpl

    component_->_remove_ref();
}


::CORBA::Object*
PhilosopherImpl::obtain_executor(const char* name)
    throw (CORBA::SystemException)
{
    if (! strcmp ( name, "component" ) ) {
        return Components::EnterpriseComponent::_duplicate (component_);
    }
    
    return Components::EnterpriseComponent::_nil();
}


void
PhilosopherImpl::release_executor(::CORBA::Object_ptr executor)
    throw (CORBA::SystemException)
{
    CORBA::release (executor);
}


void
PhilosopherImpl::configuration_complete()
    throw (CORBA::SystemException, Components::InvalidConfiguration)
{
    component_->configuration_complete();

// BEGIN USER INSERT SECTION PhilosopherImpl::configuration_complete
// END USER INSERT SECTION PhilosopherImpl::configuration_complete
}


void
PhilosopherImpl::set_session_context(::Components::SessionContext_ptr context)
    throw (CORBA::SystemException, Components::CCMException)
{
    #ifdef TAO_ORB
    ::DiningPhilosophers::CCM_Philosopher_Context_ptr tmp_context;
    
    tmp_context = dynamic_cast<::DiningPhilosophers::CCM_Philosopher_ContextImpl*>(context);
    
    if (tmp_context)
        context_ = ::DiningPhilosophers::CCM_Philosopher_ContextImpl::_duplicate(tmp_context);
    else
        context_ = ::DiningPhilosophers::CCM_Philosopher_ContextImpl::_nil();
        
    #else
    context_ = ::DiningPhilosophers::CCM_Philosopher_ContextImpl::_narrow(context);
    
    #endif
    component_->set_context(context_);
}


void
PhilosopherImpl::ccm_activate()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION PhilosopherImpl::ccm_activate
// END USER INSERT SECTION PhilosopherImpl::ccm_activate
}


void
PhilosopherImpl::ccm_passivate()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION PhilosopherImpl::ccm_passivate
// END USER INSERT SECTION PhilosopherImpl::ccm_passivate
}


void
PhilosopherImpl::ccm_remove()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION PhilosopherImpl::ccm_remove
// END USER INSERT SECTION PhilosopherImpl::ccm_remove
}


// BEGIN USER INSERT SECTION PhilosopherHomeImpl
// END USER INSERT SECTION PhilosopherHomeImpl


PhilosopherHomeImpl::PhilosopherHomeImpl()
{
// BEGIN USER INSERT SECTION PhilosopherHomeImpl::PhilosopherHomeImpl
// END USER INSERT SECTION PhilosopherHomeImpl::PhilosopherHomeImpl
}


PhilosopherHomeImpl::~PhilosopherHomeImpl()
{
// BEGIN USER INSERT SECTION PhilosopherHomeImpl::~PhilosopherHomeImpl
// END USER INSERT SECTION PhilosopherHomeImpl::~PhilosopherHomeImpl

}


void
PhilosopherHomeImpl::set_context(Components::HomeContext_ptr ctx)
    throw (CORBA::SystemException, Components::CCMException)
{
    context_ = Components::HomeContext::_duplicate(ctx);
}


::Components::EnterpriseComponent_ptr
PhilosopherHomeImpl::create ()
    throw (CORBA::SystemException, Components::CreateFailure)
{
// BEGIN USER INSERT SECTION PhilosopherHomeImpl::create
// END USER INSERT SECTION PhilosopherHomeImpl::create
    return new PhilosopherImpl();
}


::Components::EnterpriseComponent_ptr
PhilosopherHomeImpl::_cxx_new(const char* name)
	throw(CORBA::SystemException)
{
// BEGIN USER INSERT SECTION PhilosopherHomeImpl::new
	throw CORBA::NO_IMPLEMENT();  
	return 0;
// END USER INSERT SECTION PhilosopherHomeImpl::new
}


};


//
// entry point
//
::Components::HomeExecutorBase_ptr
create_PhilosopherHomeE(void)
{
// BEGIN USER INSERT SECTION create_PhilosopherHome
// END USER INSERT SECTION create_PhilosopherHome

    return new ::dinner::PhilosopherHomeImpl();
}

