//
// generated by Qedo
//

#ifndef _auction_SellerImpl_H_
#define _auction_SellerImpl_H_


// BEGIN USER INSERT SECTION file_pre
// END USER INSERT SECTION file_pre


#include <CORBA.h>
#include "auction_SellerImpl_BUSINESS.h"
#include "component_valuetypes.h"
#include "RefCountBase.h"
#include <string>


// BEGIN USER INSERT SECTION file_post
// END USER INSERT SECTION file_post


namespace auction
{
    
    //
    // executor
    //
    class SellerSessionImpl
        : public virtual CORBA::LocalObject
        , public virtual ::auction::CCM_SellerSessionImpl
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_SellerSessionImpl
// END USER INSERT SECTION INHERITANCE_SellerSessionImpl
    {
    
    private:
    
        ::auction::CCM_Seller_ContextImpl_var context_;
        
    public:
    
        SellerSessionImpl();
        virtual ~SellerSessionImpl();
        
        void set_context(::auction::CCM_Seller_ContextImpl_ptr context)
            throw (CORBA::SystemException, Components::CCMException);
        
        void configuration_complete()
            throw (CORBA::SystemException, Components::InvalidConfiguration);
        
        void remove()
            throw (CORBA::SystemException);
        
        
        //
        // IDL:auction/Seller/amount:1.0
        //
        void amount(CORBA::Long param)
        	throw(CORBA::SystemException);
        CORBA::Long amount()
        	throw(CORBA::SystemException);
        
        //
        // IDL:auction/SellerForAuctioneer/pay:1.0
        //
        virtual void pay(CORBA::Long cnt, CORBA::Long amount)
        	throw(CORBA::SystemException);
    
// BEGIN USER INSERT SECTION SellerSessionImpl
      Components::Thread_var seller_thread;
		Components::Mutex_var  seller_mutex;
		Components::Cond_var   seller_cond;
      bool stopped;
		CORBA::Long            seller_amount;
	public:
		static void* run(void*);
		void stop();
		void do_sell(const char*, unsigned long);
// END USER INSERT SECTION SellerSessionImpl

    };
    
    
    //
    // executor locator
    //
    class SellerImpl
        : public virtual CORBA::LocalObject
        , public virtual Components::SessionExecutorLocator
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_SellerImpl
// END USER INSERT SECTION INHERITANCE_SellerImpl
    {
    
    private:
    
        ::auction::CCM_Seller_ContextImpl_var context_;
        
        SellerSessionImpl* component_;
        
    public:
    
        SellerImpl();
        virtual ~SellerImpl();
        
        
        //
        // IDL:Components/ExecutorLocator/obtain_executor:1.0
        //
        virtual CORBA::Object_ptr obtain_executor(const char* name)
        	throw(CORBA::SystemException);
        
        //
        // IDL:Components/ExecutorLocator/release_executor:1.0
        //
        virtual void release_executor(CORBA::Object_ptr exc)
        	throw(CORBA::SystemException);
        
        //
        // IDL:Components/ExecutorLocator/configuration_complete:1.0
        //
        virtual void configuration_complete()
        	throw(CORBA::SystemException, ::Components::InvalidConfiguration);
        
        //
        // IDL:Components/SessionComponent/set_session_context:1.0
        //
        virtual void set_session_context(Components::SessionContext_ptr ctx)
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/SessionComponent/ccm_activate:1.0
        //
        virtual void ccm_activate()
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/SessionComponent/ccm_passivate:1.0
        //
        virtual void ccm_passivate()
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/SessionComponent/ccm_remove:1.0
        //
        virtual void ccm_remove()
        	throw(CORBA::SystemException, ::Components::CCMException);
    
// BEGIN USER INSERT SECTION SellerImpl
// END USER INSERT SECTION SellerImpl

    };
    
    
    //
    // home executor
    //
    class SellerHomeImpl
        : public virtual CORBA::LocalObject
        , public virtual ::auction::CCM_Sellers
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_SellerHomeImpl
// END USER INSERT SECTION INHERITANCE_SellerHomeImpl
    {
    
    private:
    
        Components::HomeContext_var context_;
        
    public:
        SellerHomeImpl();
        virtual ~SellerHomeImpl();
        
        //
        // IDL:Components/HomeExecutorBase/set_context:1.0
        //
        virtual void set_context (Components::HomeContext_ptr ctx)
            throw (CORBA::SystemException, Components::CCMException);
        
        //
        // IDL:.../create:1.0
        //
        virtual ::Components::EnterpriseComponent_ptr create()
            throw (CORBA::SystemException, Components::CreateFailure);
    
// BEGIN USER INSERT SECTION SellerHomeImpl
// END USER INSERT SECTION SellerHomeImpl

    };
    
};

//
// entry point
//
extern "C" {
#ifdef _WIN32
__declspec(dllexport)
#else
#endif
::Components::HomeExecutorBase_ptr create_SellersE(void);
}

#endif
