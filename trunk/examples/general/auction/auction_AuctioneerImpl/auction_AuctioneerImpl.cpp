//
// generated by Qedo
//

#include "auction_AuctioneerImpl.h"


// BEGIN USER INSERT SECTION file
// END USER INSERT SECTION file


namespace auction {


// BEGIN USER INSERT SECTION AuctioneerSessionImpl
// END USER INSERT SECTION AuctioneerSessionImpl


AuctioneerSessionImpl::AuctioneerSessionImpl()
{
// BEGIN USER INSERT SECTION AuctioneerSessionImpl::AuctioneerSessionImpl
// END USER INSERT SECTION AuctioneerSessionImpl::AuctioneerSessionImpl
}


AuctioneerSessionImpl::~AuctioneerSessionImpl()
{
// BEGIN USER INSERT SECTION AuctioneerSessionImpl::~AuctioneerSessionImpl
// END USER INSERT SECTION AuctioneerSessionImpl::~AuctioneerSessionImpl

}


void
AuctioneerSessionImpl::set_context(::auction::CCM_Auctioneer_Context_ptr context)
    throw (CORBA::SystemException, Components::CCMException)
{
    context_ = ::auction::CCM_Auctioneer_Context::_duplicate(context);
}


void
AuctioneerSessionImpl::configuration_complete()
    throw (CORBA::SystemException, Components::InvalidConfiguration)
{
// BEGIN USER INSERT SECTION AuctioneerSessionImpl::configuration_complete
// END USER INSERT SECTION AuctioneerSessionImpl::configuration_complete
}


void
AuctioneerSessionImpl::remove()
    throw (CORBA::SystemException)
{
// BEGIN USER INSERT SECTION AuctioneerSessionImpl::remove
// END USER INSERT SECTION AuctioneerSessionImpl::remove
}


CORBA::Long
AuctioneerSessionImpl::sell(auction::SellerForAuctioneer_ptr seller, const char* item, CORBA::Long minimum)
	throw(CORBA::SystemException)
{
// BEGIN USER INSERT SECTION AuctioneerSessionImpl::sell
// END USER INSERT SECTION AuctioneerSessionImpl::sell
}


void
AuctioneerSessionImpl::push_event (Components::EventBase* ev)
    throw (CORBA::SystemException)
{
// BEGIN USER INSERT SECTION AuctioneerSessionImpl::push_event
// END USER INSERT SECTION AuctioneerSessionImpl::push_event
}


void
AuctioneerSessionImpl::push_Bid(::auction::Bid* ev)
    throw (CORBA::SystemException)
{
// BEGIN USER INSERT SECTION AuctioneerSessionImpl::push_Bid
// END USER INSERT SECTION AuctioneerSessionImpl::push_Bid
}


// BEGIN USER INSERT SECTION AuctioneerImpl
// END USER INSERT SECTION AuctioneerImpl


AuctioneerImpl::AuctioneerImpl()
:component_(new AuctioneerSessionImpl())
{
// BEGIN USER INSERT SECTION AuctioneerImpl::AuctioneerImpl
// END USER INSERT SECTION AuctioneerImpl::AuctioneerImpl
}


AuctioneerImpl::~AuctioneerImpl()
{
// BEGIN USER INSERT SECTION AuctioneerImpl::~AuctioneerImpl
// END USER INSERT SECTION AuctioneerImpl::~AuctioneerImpl

    component_->_remove_ref();
}


::CORBA::Object*
AuctioneerImpl::obtain_executor(const char* name)
    throw (CORBA::SystemException)
{
    if (! strcmp ( name, "component" ) ) {
        return Components::EnterpriseComponent::_duplicate (component_);
    }
    
    else if (! strcmp (name, "for_seller")) {
        return Components::EnterpriseComponent::_duplicate (component_);
    }
    
    return Components::EnterpriseComponent::_nil();
}


void
AuctioneerImpl::release_executor(::CORBA::Object_ptr executor)
    throw (CORBA::SystemException)
{
    CORBA::release (executor);
}


void
AuctioneerImpl::configuration_complete()
    throw (CORBA::SystemException, Components::InvalidConfiguration)
{
    component_->configuration_complete();

// BEGIN USER INSERT SECTION AuctioneerImpl::configuration_complete
// END USER INSERT SECTION AuctioneerImpl::configuration_complete
}


void
AuctioneerImpl::set_session_context(::Components::SessionContext_ptr context)
    throw (CORBA::SystemException, Components::CCMException)
{
    #ifdef TAO_ORB
    ::auction::CCM_Auctioneer_Context_ptr tmp_context;
    
    tmp_context = dynamic_cast<::auction::CCM_Auctioneer_Context*>(context);
    
    if (tmp_context)
        context_ = ::auction::CCM_Auctioneer_Context::_duplicate(tmp_context);
    else
        context_ = ::auction::CCM_Auctioneer_Context::_nil();
        
    #else
    context_ = ::auction::CCM_Auctioneer_Context::_narrow(context);
    
    #endif
    component_->set_context(context_);
}


void
AuctioneerImpl::ccm_activate()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION AuctioneerImpl::ccm_activate
// END USER INSERT SECTION AuctioneerImpl::ccm_activate
}


void
AuctioneerImpl::ccm_passivate()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION AuctioneerImpl::ccm_passivate
// END USER INSERT SECTION AuctioneerImpl::ccm_passivate
}


void
AuctioneerImpl::ccm_remove()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION AuctioneerImpl::ccm_remove
// END USER INSERT SECTION AuctioneerImpl::ccm_remove
}


// BEGIN USER INSERT SECTION AuctioneerHomeImpl
// END USER INSERT SECTION AuctioneerHomeImpl


AuctioneerHomeImpl::AuctioneerHomeImpl()
{
// BEGIN USER INSERT SECTION AuctioneerHomeImpl::AuctioneerHomeImpl
// END USER INSERT SECTION AuctioneerHomeImpl::AuctioneerHomeImpl
}


AuctioneerHomeImpl::~AuctioneerHomeImpl()
{
// BEGIN USER INSERT SECTION AuctioneerHomeImpl::~AuctioneerHomeImpl
// END USER INSERT SECTION AuctioneerHomeImpl::~AuctioneerHomeImpl

}


void
AuctioneerHomeImpl::set_context(Components::CCMContext_ptr ctx)
    throw (CORBA::SystemException, Components::CCMException)
{
    context_ = Components::CCMContext::_duplicate(ctx);
}


::Components::EnterpriseComponent_ptr
AuctioneerHomeImpl::create ()
    throw (CORBA::SystemException, Components::CreateFailure)
{
// BEGIN USER INSERT SECTION AuctioneerHomeImpl::create
// END USER INSERT SECTION AuctioneerHomeImpl::create
    return new AuctioneerImpl();
}


};


//
// entry point
//
::Components::HomeExecutorBase_ptr
create_AuctioneersE(void)
{
// BEGIN USER INSERT SECTION create_Auctioneers
// END USER INSERT SECTION create_Auctioneers

    return new ::auction::AuctioneerHomeImpl();
}

