//
// generated by Qedo
//

#ifndef _auction_AuctioneerImpl_H_
#define _auction_AuctioneerImpl_H_


// BEGIN USER INSERT SECTION file_pre
// END USER INSERT SECTION file_pre


#include <CORBA.h>
#include "auction_AuctioneerImpl_BUSINESS.h"
#include "valuetypes.h"
#include "RefCountBase.h"
#include <string>


// BEGIN USER INSERT SECTION file_post
#include <list>

namespace auction
{
	class ItemEntry {
		public:
		ItemEntry();
		ItemEntry(const ItemEntry&);
		~ItemEntry();
		const ItemEntry& operator=(const ItemEntry&);
		char* item;
		CORBA::Long minimum;
		CORBA::Long contract;
		auction::SellerForAuctioneer_var seller;
	};

	typedef std::list<ItemEntry> item_list_t;
};
// END USER INSERT SECTION file_post


namespace auction
{
    
    //
    // executor
    //
    class AuctioneerSessionImpl
        : public virtual CORBA::LocalObject
        , public virtual ::auction::CCM_AuctioneerSessionImpl
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_AuctioneerSessionImpl
// END USER INSERT SECTION INHERITANCE_AuctioneerSessionImpl
    {
    
    private:
    
        ::auction::CCM_Auctioneer_Context_var context_;
        
    public:
    
        AuctioneerSessionImpl();
        virtual ~AuctioneerSessionImpl();
        
        void set_context(::auction::CCM_Auctioneer_Context_ptr context)
            throw (CORBA::SystemException, Components::CCMException);
        
        void configuration_complete()
            throw (CORBA::SystemException, Components::InvalidConfiguration);
        
        void remove()
            throw (CORBA::SystemException);
        
        
        //
        // IDL:auction/AuctioneerForSeller/sell:1.0
        //
        virtual CORBA::Long sell(auction::SellerForAuctioneer_ptr seller, const char* item, CORBA::Long minimum)
        	throw(CORBA::SystemException);
        
        //
        // IDL:Components/EventConsumerBase/push_event:1.0
        //
        virtual void push_event (Components::EventBase* ev)
            throw (CORBA::SystemException);
        
        
        //
        // IDL:auction/Auctioneer/a_bid:1.0
        //
        void push_Bid(::auction::Bid* ev)
            throw (CORBA::SystemException);
        
    
// BEGIN USER INSERT SECTION AuctioneerSessionImpl
	private:	  
        Components::Mutex_var item_list_mutex;
        Components::Mutex_var current_item_mutex;
		  Components::Cond_var current_item_cond;
        item_list_t item_list;
		  ItemEntry current_item;
        Components::Thread_var auctioneer_thread;
		  ::auction::BidderForAuctioneer_var current_bidder;
		  CORBA::Long current_price;
		  CORBA::Long contracts;
        bool stopped;
		  int count;
		  unsigned long time;
		  bool have_current_item;

		  void call_out_item();
		  void sell_item();
		  void get_new_item();
	public:
		static void* run(void*);
		void stop();
		void timeout();
// END USER INSERT SECTION AuctioneerSessionImpl

    };
    
    
    //
    // executor locator
    //
    class AuctioneerImpl
        : public virtual CORBA::LocalObject
        , public virtual Components::SessionExecutorLocator
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_AuctioneerImpl
// END USER INSERT SECTION INHERITANCE_AuctioneerImpl
    {
    
    private:
    
        ::auction::CCM_Auctioneer_Context_var context_;
        
        AuctioneerSessionImpl* component_;
        
    public:
    
        AuctioneerImpl();
        virtual ~AuctioneerImpl();
        
        
        //
        // IDL:Components/ExecutorLocator/obtain_executor:1.0
        //
        virtual CORBA::Object_ptr obtain_executor(const char* name)
        	throw(CORBA::SystemException);
        
        //
        // IDL:Components/ExecutorLocator/release_executor:1.0
        //
        virtual void release_executor(CORBA::Object_ptr exc)
        	throw(CORBA::SystemException);
        
        //
        // IDL:Components/ExecutorLocator/configuration_complete:1.0
        //
        virtual void configuration_complete()
        	throw(CORBA::SystemException, ::Components::InvalidConfiguration);
        
        //
        // IDL:Components/SessionComponent/set_session_context:1.0
        //
        virtual void set_session_context(Components::SessionContext_ptr ctx)
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/SessionComponent/ccm_activate:1.0
        //
        virtual void ccm_activate()
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/SessionComponent/ccm_passivate:1.0
        //
        virtual void ccm_passivate()
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/SessionComponent/ccm_remove:1.0
        //
        virtual void ccm_remove()
        	throw(CORBA::SystemException, ::Components::CCMException);
    
// BEGIN USER INSERT SECTION AuctioneerImpl
// END USER INSERT SECTION AuctioneerImpl

    };
    
    
    //
    // home executor
    //
    class AuctioneerHomeImpl
        : public virtual CORBA::LocalObject
        , public virtual ::auction::CCM_Auctioneers
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_AuctioneerHomeImpl
// END USER INSERT SECTION INHERITANCE_AuctioneerHomeImpl
    {
    
    private:
    
        Components::CCMContext_var context_;
        
    public:
        AuctioneerHomeImpl();
        virtual ~AuctioneerHomeImpl();
        
        //
        // IDL:Components/HomeExecutorBase/set_context:1.0
        //
        virtual void set_context (Components::CCMContext_ptr ctx)
            throw (CORBA::SystemException, Components::CCMException);
        
        //
        // IDL:.../create:1.0
        //
        virtual ::Components::EnterpriseComponent_ptr create()
            throw (CORBA::SystemException, Components::CreateFailure);
    
// BEGIN USER INSERT SECTION AuctioneerHomeImpl
// END USER INSERT SECTION AuctioneerHomeImpl

    };
    
};

//
// entry point
//
extern "C" {
#ifdef _WIN32
__declspec(dllexport)
#else
#endif
::Components::HomeExecutorBase_ptr create_AuctioneersE(void);
}

#endif
