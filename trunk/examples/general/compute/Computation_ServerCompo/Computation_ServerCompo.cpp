//
// generated by Qedo
//

#include "Computation_ServerCompo.h"


// BEGIN USER INSERT SECTION file
// END USER INSERT SECTION file


namespace Computation {


// BEGIN USER INSERT SECTION ServerExec
// END USER INSERT SECTION ServerExec


ServerExec::ServerExec()
{
// BEGIN USER INSERT SECTION ServerExec::ServerExec
// END USER INSERT SECTION ServerExec::ServerExec
}


ServerExec::~ServerExec()
{
// BEGIN USER INSERT SECTION ServerExec::~ServerExec
// END USER INSERT SECTION ServerExec::~ServerExec

}


void
ServerExec::set_context(::Computation::CCM_Server_ContextImpl_ptr context)
    throw (CORBA::SystemException, Components::CCMException)
{
    context_ = ::Computation::CCM_Server_ContextImpl::_duplicate(context);
}


void
ServerExec::configuration_complete()
    throw (CORBA::SystemException, Components::InvalidConfiguration)
{
// BEGIN USER INSERT SECTION ServerExec::configuration_complete
// END USER INSERT SECTION ServerExec::configuration_complete
}


void
ServerExec::remove()
    throw (CORBA::SystemException)
{
// BEGIN USER INSERT SECTION ServerExec::remove
// END USER INSERT SECTION ServerExec::remove
}


CORBA::Long
ServerExec::compute(CORBA::Long argument_of_function)
	throw(CORBA::SystemException)
{
// BEGIN USER INSERT SECTION ServerExec::compute
	// take some time
	for (int n = 0; n < 100; n++);
	return 9 ;
// END USER INSERT SECTION ServerExec::compute
}


// BEGIN USER INSERT SECTION ServerCompo
// END USER INSERT SECTION ServerCompo


ServerCompo::ServerCompo()
:component_(new ServerExec())
{
// BEGIN USER INSERT SECTION ServerCompo::ServerCompo
// END USER INSERT SECTION ServerCompo::ServerCompo
}


ServerCompo::~ServerCompo()
{
// BEGIN USER INSERT SECTION ServerCompo::~ServerCompo
// END USER INSERT SECTION ServerCompo::~ServerCompo

    component_->_remove_ref();
}


::CORBA::Object*
ServerCompo::obtain_executor(const char* name)
    throw (CORBA::SystemException)
{
    if (! strcmp ( name, "component" ) ) {
        return Components::EnterpriseComponent::_duplicate (component_);
    }
    
    else if (! strcmp (name, "computing_interface")) {
        return Components::EnterpriseComponent::_duplicate (component_);
    }
    
    return Components::EnterpriseComponent::_nil();
}


void
ServerCompo::release_executor(::CORBA::Object_ptr executor)
    throw (CORBA::SystemException)
{
    CORBA::release (executor);
}


void
ServerCompo::configuration_complete()
    throw (CORBA::SystemException, Components::InvalidConfiguration)
{
    component_->configuration_complete();

// BEGIN USER INSERT SECTION ServerCompo::configuration_complete
// END USER INSERT SECTION ServerCompo::configuration_complete
}


void
ServerCompo::set_session_context(::Components::SessionContext_ptr context)
    throw (CORBA::SystemException, Components::CCMException)
{
    #ifdef TAO_ORB
    ::Computation::CCM_Server_Context_ptr tmp_context;
    
    tmp_context = dynamic_cast<::Computation::CCM_Server_ContextImpl*>(context);
    
    if (tmp_context)
        context_ = ::Computation::CCM_Server_ContextImpl::_duplicate(tmp_context);
    else
        context_ = ::Computation::CCM_Server_ContextImpl::_nil();
        
    #else
    context_ = ::Computation::CCM_Server_ContextImpl::_narrow(context);
    
    #endif
    component_->set_context(context_);
}


void
ServerCompo::ccm_activate()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION ServerCompo::ccm_activate
// END USER INSERT SECTION ServerCompo::ccm_activate
}


void
ServerCompo::ccm_passivate()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION ServerCompo::ccm_passivate
// END USER INSERT SECTION ServerCompo::ccm_passivate
}


void
ServerCompo::ccm_remove()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION ServerCompo::ccm_remove
// END USER INSERT SECTION ServerCompo::ccm_remove
}


// BEGIN USER INSERT SECTION ServerHomeExec
// END USER INSERT SECTION ServerHomeExec


ServerHomeExec::ServerHomeExec()
{
// BEGIN USER INSERT SECTION ServerHomeExec::ServerHomeExec
// END USER INSERT SECTION ServerHomeExec::ServerHomeExec
}


ServerHomeExec::~ServerHomeExec()
{
// BEGIN USER INSERT SECTION ServerHomeExec::~ServerHomeExec
// END USER INSERT SECTION ServerHomeExec::~ServerHomeExec

}


void
ServerHomeExec::set_context(Components::HomeContext_ptr ctx)
    throw (CORBA::SystemException, Components::CCMException)
{
    context_ = Components::HomeContext::_duplicate(ctx);
    
}


::Components::EnterpriseComponent_ptr
ServerHomeExec::create ()
    throw (CORBA::SystemException, Components::CreateFailure)
{
// BEGIN USER INSERT SECTION ServerHomeExec::create
// END USER INSERT SECTION ServerHomeExec::create
    return new ServerCompo();
}


};


//
// entry point
//
::Components::HomeExecutorBase_ptr
create_ServerHomeE(void)
{
// BEGIN USER INSERT SECTION create_ServerHome
// END USER INSERT SECTION create_ServerHome

    return new ::Computation::ServerHomeExec();
}

