//
// generated by Qedo
//

#include "dynamic_creation_GenericCreatorCompo.h"


// BEGIN USER INSERT SECTION file
// END USER INSERT SECTION file


namespace dynamic_creation {


// BEGIN USER INSERT SECTION GenericCreatorSessionImpl


void
GenericCreatorSessionImpl::start()
{

	std::cout << "GenericCreatorSessionImpl: Thread started." << std::endl;

	while (!run_stopped)
	{  

		// get reference of the HomeFinder
		// using Qedo Extension
		CORBA::Object_var hf_object = context_ -> resolve_service_reference("ComponentHomeFinder");
		Components::HomeFinder_var home_finder = Components::HomeFinder::_narrow(hf_object);

		// get reference of CallerHome
		// knowing it is a keyless Home
		Components::CCMHome_var a_home;
		try {
			a_home = home_finder -> find_home_by_home_type ("IDL:HelloWorld/CallerHome:1.0");
		} catch (Components::HomeNotFound)
		{
			std::cout << "CallerHome not found in HomeFinder" << std::endl;
		}
		Components::KeylessCCMHome_var caller_home = Components::KeylessCCMHome::_narrow(a_home);
		if (CORBA::is_nil(caller_home)) 
		{
			std::cout << "Cannot Narrow CallerHome" << std::endl;
			return;
		};

		// get reference of CalleeHome
		// knowing it is a keyless Home
		try {
			a_home = home_finder -> find_home_by_home_type ("IDL:HelloWorld/CalleeHome:1.0");
		} catch (Components::HomeNotFound)
		{
			std::cout << "CalleeHome not found in Home Finder" << std::endl;
		}
		Components::KeylessCCMHome_var callee_home = Components::KeylessCCMHome::_narrow(a_home);
		if (CORBA::is_nil(callee_home)) 
		{
			std::cout << "Couldn't find CalleeHome in HomeFinder" << std::endl;
			return;
		};

		// create instance
		// Callee
		Components::CCMObject_var callee = callee_home ->create_component();
		
		// caller
		Components::CCMObject_var caller = caller_home ->create_component();

		// connection instaces
		CORBA::Object_var facet = callee -> provide_facet("the_hello");
		caller -> connect("hi",facet.in());

		// start operational phase
		// caller at last
		callee -> configuration_complete();
		caller -> configuration_complete();

		caller -> remove();
		callee -> remove();
	}; // end of test execution

}	

void*
GenericCreatorSessionImpl::run(void *p)
{
	// thread entry function has to be static
	GenericCreatorSessionImpl* impl;
	impl = static_cast<GenericCreatorSessionImpl*>(p);
	impl->start();

	return 0;
}

void
GenericCreatorSessionImpl::stop()
{
	run_stopped = true;
	run_thread->join();

}

// END USER INSERT SECTION GenericCreatorSessionImpl


GenericCreatorSessionImpl::GenericCreatorSessionImpl()
{
// BEGIN USER INSERT SECTION GenericCreatorSessionImpl::GenericCreatorSessionImpl
	run_stopped = false;
// END USER INSERT SECTION GenericCreatorSessionImpl::GenericCreatorSessionImpl
}


GenericCreatorSessionImpl::~GenericCreatorSessionImpl()
{
// BEGIN USER INSERT SECTION GenericCreatorSessionImpl::~GenericCreatorSessionImpl
// END USER INSERT SECTION GenericCreatorSessionImpl::~GenericCreatorSessionImpl

}


void
GenericCreatorSessionImpl::set_context(::dynamic_creation::CCM_GenericCreator_ContextImpl_ptr context)
    throw (CORBA::SystemException, Components::CCMException)
{
    context_ = ::dynamic_creation::CCM_GenericCreator_ContextImpl::_duplicate(context);
}


void
GenericCreatorSessionImpl::configuration_complete()
    throw (CORBA::SystemException, Components::InvalidConfiguration)
{
// BEGIN USER INSERT SECTION GenericCreatorSessionImpl::configuration_complete

	// starting the thread to allow immediate return of configuration complete
	run_thread = context_->start_thread(run,this);


// END USER INSERT SECTION GenericCreatorSessionImpl::configuration_complete
}


void
GenericCreatorSessionImpl::remove()
    throw (CORBA::SystemException)
{
// BEGIN USER INSERT SECTION GenericCreatorSessionImpl::remove
// END USER INSERT SECTION GenericCreatorSessionImpl::remove
}


// BEGIN USER INSERT SECTION GenericCreatorCompo
// END USER INSERT SECTION GenericCreatorCompo


GenericCreatorCompo::GenericCreatorCompo()
:component_(new GenericCreatorSessionImpl())
{
// BEGIN USER INSERT SECTION GenericCreatorCompo::GenericCreatorCompo
// END USER INSERT SECTION GenericCreatorCompo::GenericCreatorCompo
}


GenericCreatorCompo::~GenericCreatorCompo()
{
// BEGIN USER INSERT SECTION GenericCreatorCompo::~GenericCreatorCompo
// END USER INSERT SECTION GenericCreatorCompo::~GenericCreatorCompo

    component_->_remove_ref();
}


::CORBA::Object*
GenericCreatorCompo::obtain_executor(const char* name)
    throw (CORBA::SystemException)
{
    if (! strcmp ( name, "component" ) ) {
        return Components::EnterpriseComponent::_duplicate (component_);
    }
    
    return Components::EnterpriseComponent::_nil();
}


void
GenericCreatorCompo::release_executor(::CORBA::Object_ptr executor)
    throw (CORBA::SystemException)
{
    CORBA::release (executor);
}


void
GenericCreatorCompo::configuration_complete()
    throw (CORBA::SystemException, Components::InvalidConfiguration)
{
    component_->configuration_complete();

// BEGIN USER INSERT SECTION GenericCreatorCompo::configuration_complete
// END USER INSERT SECTION GenericCreatorCompo::configuration_complete
}


void
GenericCreatorCompo::set_session_context(::Components::SessionContext_ptr context)
    throw (CORBA::SystemException, Components::CCMException)
{
    #ifdef TAO_ORB
    ::dynamic_creation::CCM_GenericCreator_Context_ptr tmp_context;
    
    tmp_context = dynamic_cast<::dynamic_creation::CCM_GenericCreator_ContextImpl*>(context);
    
    if (tmp_context)
        context_ = ::dynamic_creation::CCM_GenericCreator_ContextImpl::_duplicate(tmp_context);
    else
        context_ = ::dynamic_creation::CCM_GenericCreator_ContextImpl::_nil();
        
    #else
    context_ = ::dynamic_creation::CCM_GenericCreator_ContextImpl::_narrow(context);
    
    #endif
    component_->set_context(context_);
}


void
GenericCreatorCompo::ccm_activate()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION GenericCreatorCompo::ccm_activate
// END USER INSERT SECTION GenericCreatorCompo::ccm_activate
}


void
GenericCreatorCompo::ccm_passivate()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION GenericCreatorCompo::ccm_passivate
// END USER INSERT SECTION GenericCreatorCompo::ccm_passivate
}


void
GenericCreatorCompo::ccm_remove()
    throw (CORBA::SystemException, Components::CCMException)
{
// BEGIN USER INSERT SECTION GenericCreatorCompo::ccm_remove
	component_ -> stop();
// END USER INSERT SECTION GenericCreatorCompo::ccm_remove
}


// BEGIN USER INSERT SECTION GenericCreatorHomeImpl
// END USER INSERT SECTION GenericCreatorHomeImpl


GenericCreatorHomeImpl::GenericCreatorHomeImpl()
{
// BEGIN USER INSERT SECTION GenericCreatorHomeImpl::GenericCreatorHomeImpl
// END USER INSERT SECTION GenericCreatorHomeImpl::GenericCreatorHomeImpl
}


GenericCreatorHomeImpl::~GenericCreatorHomeImpl()
{
// BEGIN USER INSERT SECTION GenericCreatorHomeImpl::~GenericCreatorHomeImpl
// END USER INSERT SECTION GenericCreatorHomeImpl::~GenericCreatorHomeImpl

}


void
GenericCreatorHomeImpl::set_context(Components::HomeContext_ptr ctx)
    throw (CORBA::SystemException, Components::CCMException)
{
    context_ = Components::HomeContext::_duplicate(ctx);
    
}


::Components::EnterpriseComponent_ptr
GenericCreatorHomeImpl::create ()
    throw (CORBA::SystemException, Components::CreateFailure)
{
// BEGIN USER INSERT SECTION GenericCreatorHomeImpl::create
// END USER INSERT SECTION GenericCreatorHomeImpl::create
    return new GenericCreatorCompo();
}


};


//
// entry point
//
::Components::HomeExecutorBase_ptr
create_GenericCreatorHomeE(void)
{
// BEGIN USER INSERT SECTION create_GenericCreatorHome
// END USER INSERT SECTION create_GenericCreatorHome

    return new ::dynamic_creation::GenericCreatorHomeImpl();
}

