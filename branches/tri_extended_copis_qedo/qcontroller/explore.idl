/***************************************************************************/
/* Qedo - Quality of Service Enabled Distributed Objects                   */
/*                                                                         */
/* http://www.qedo.org                                                     */
/*                                                                         */
/* Copyright (C) 2002-2004 by the Qedo Team                                */
/*                                                                         */
/* This library is free software; you can redistribute it and/or           */
/* modify it under the terms of the GNU Lesser General Public              */
/* License as published by the Free Software Foundation; either            */
/* version 2.1 of the License, or (at your option) any later version.      */
/*                                                                         */
/* This library is distributed in the hope that it will be useful,         */
/* but WITHOUT ANY WARRANTY; without even the implied warranty of          */
/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU        */
/* Lesser General Public License for more details.                         */
/*                                                                         */
/* You should have received a copy of the GNU Lesser General Public        */
/* License along with this library; if not, write to the Free Software     */
/* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA */
/***************************************************************************/

#include "Components.idl"


struct ComponentInstanceInfo {
	string full_scoped_name;
	string short_name;
	Components::CCMObject compont_ref;
};

typedef sequence < ComponentInstanceInfo > ComponentInstanceInfoList;

struct HomeInstanceInfo {
	string full_scoped_name;
	string short_name;
	ComponentInstanceInfoList my_components;
	Components::CCMHome home_ref;
};

typedef sequence < HomeInstanceInfo > HomeInstanceInfoList;

struct ContainerInstanceInfo {
	string short_name;
	HomeInstanceInfoList my_homes;
	Components::Deployment::Container container_ref;
};

typedef sequence < ContainerInstanceInfo > ContainerInstanceInfoList;

struct ComponentServerInfo {
	string host_name;
	ContainerInstanceInfoList my_containers;
	Components::Deployment::ComponentServer component_server_ref;
};

typedef sequence < ComponentServerInfo > ComponentServerInfoList;

struct ComponentServerActivatorInfo {
	string host_name;
	ComponentServerInfoList my_component_servers;
	Components::Deployment::ServerActivator component_server_activator_ref;
};

typedef sequence < ComponentServerActivatorInfo > ComponentServerActivatorInfoList;

interface Explore {
	ComponentServerActivatorInfoList explore_qedo();
};
