//
// generated by Qedo
//

#ifndef _CCMGenerator_CADBackEnd_compo_H_
#define _CCMGenerator_CADBackEnd_compo_H_


// BEGIN USER INSERT SECTION file_pre
#include "RepositoryConnector.h"
// END USER INSERT SECTION file_pre


#include <CORBA.h>
#include "CCMGenerator_CADBackEnd_compo_BUSINESS.h"
#include "valuetypes.h"
#include "RefCountBase.h"
#include <string>


// BEGIN USER INSERT SECTION file_post
// END USER INSERT SECTION file_post


namespace CCMGenerator
{
    
    //
    // executor
    //
    class CADBackendSessionImpl
        : public virtual CORBA::LocalObject
        , public virtual ::CCMGenerator::CCM_CADBackendSessionImpl
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_CADBackendSessionImpl
// END USER INSERT SECTION INHERITANCE_CADBackendSessionImpl
    {
    
    private:
    
        ::CCMGenerator::CCM_CADBackend_ContextImpl_var context_;
        
    public:
    
        CADBackendSessionImpl();
        virtual ~CADBackendSessionImpl();
        
        void set_context(::CCMGenerator::CCM_CADBackend_ContextImpl_ptr context)
            throw (CORBA::SystemException, Components::CCMException);
        
        void configuration_complete()
            throw (CORBA::SystemException, Components::InvalidConfiguration);
        
        void remove()
            throw (CORBA::SystemException);
        
        
        //
        // IDL:CCMGenerator/CADBackend/rep_ref:1.0
        //
        void rep_ref(CORBA::Object_ptr param)
        	throw(CORBA::SystemException);
        CORBA::Object_ptr rep_ref()
        	throw(CORBA::SystemException);
        
        //
        // IDL:CCMGenerator/BackEndControl/generate:1.0
        //
        virtual void generate(const char* target, const char* output)
        	throw(CORBA::SystemException, ::CCMGenerator::OutputError);
    
// BEGIN USER INSERT SECTION CADBackendSessionImpl

	private:
	CORBA::Object_var _root;
	CCMGenerator::CCMRepositoryConnector _repconnector;
	MDE::BaseIDL::BaseIDLPackage_var _base_idl_pkg_ref; 
	MDE::CIF::CIFPackage_var _cif_ref;
	MDE::ComponentIDL::ComponentIDLPackage_var _component_idl_ref;
	MDE::Deployment::DeploymentPackage_var _deployment_ref;
	MDE::Deployment::ComponentInstantiationSet_var _ordered_comps;
	MDE::Deployment::ComponentInstantiationSet_var _all_comps;
	unsigned long _comp_inst_count;
	
	void connect_the_whole_repository ();

	//generate methods
	void _generate_componentfile_element ( MDE::Deployment::DeploymentUnit_ptr, ostream& out, unsigned long & indent_level );
	void _generate_partitioning_element ( MDE::Deployment::ProcessCollocation_ptr, ostream& out, unsigned long & indent_level );
	void _generate_connection_element ( MDE::Deployment::Connection_ptr, ostream& out, unsigned long & indent_level ); 
	void _generate_comp_instantiation_element ( MDE::Deployment::ComponentInstantiation_ptr, ostream& out, unsigned long & indent_level );
	void _generate_homeplacement_element ( MDE::Deployment::HomeInstantiation_ptr , ostream& out, unsigned long & indent_level );
	void _generate_registerwith_element ( MDE::Deployment::RegisterComponentInstance_ptr , ostream& out, unsigned long & indent_level );
	void _generate_source_end_element( MDE::Deployment::ConnectionEnd_ptr, ostream& out, unsigned long & indent_level );
	void _generate_target_end_element( MDE::Deployment::ConnectionEnd_ptr, ostream& out, unsigned long & indent_level );
	void _generate_ordered_element ( MDE::Deployment::ComponentInstantiation_ptr, ostream& out, unsigned long & indent_level );

	// help methods
	void add_ordered_comp_instance ( MDE::Deployment::ComponentInstantiation_var  );
	void add_comp_instance ( MDE::Deployment::ComponentInstantiation_var  );
	MDE::Deployment::ComponentInstantiation_var get_comp_inst_ordered ( unsigned long );
	bool is_deployment_unit_correct ( MDE::Deployment::HomeInstantiationSet*, MDE::Deployment::DeploymentUnit_ptr );
	
	public:
		void begin ( ostream& out );

// END USER INSERT SECTION CADBackendSessionImpl

    };
    
    
    //
    // executor locator
    //
    class CADBackEnd_compo
        : public virtual CORBA::LocalObject
        , public virtual Components::SessionExecutorLocator
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_CADBackEnd_compo
// END USER INSERT SECTION INHERITANCE_CADBackEnd_compo
    {
    
    private:
    
        ::CCMGenerator::CCM_CADBackend_ContextImpl_var context_;
        
        CADBackendSessionImpl* component_;
        
    public:
    
        CADBackEnd_compo();
        virtual ~CADBackEnd_compo();
        
        
        //
        // IDL:Components/ExecutorLocator/obtain_executor:1.0
        //
        virtual CORBA::Object_ptr obtain_executor(const char* name)
        	throw(CORBA::SystemException);
        
        //
        // IDL:Components/ExecutorLocator/release_executor:1.0
        //
        virtual void release_executor(CORBA::Object_ptr exc)
        	throw(CORBA::SystemException);
        
        //
        // IDL:Components/ExecutorLocator/configuration_complete:1.0
        //
        virtual void configuration_complete()
        	throw(CORBA::SystemException, ::Components::InvalidConfiguration);
        
        //
        // IDL:Components/SessionComponent/set_session_context:1.0
        //
        virtual void set_session_context(Components::SessionContext_ptr ctx)
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/SessionComponent/ccm_activate:1.0
        //
        virtual void ccm_activate()
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/SessionComponent/ccm_passivate:1.0
        //
        virtual void ccm_passivate()
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/SessionComponent/ccm_remove:1.0
        //
        virtual void ccm_remove()
        	throw(CORBA::SystemException, ::Components::CCMException);
    
// BEGIN USER INSERT SECTION CADBackEnd_compo
// END USER INSERT SECTION CADBackEnd_compo

    };
    
    
    //
    // home executor
    //
    class CADBackendHomeImpl
        : public virtual CORBA::LocalObject
        , public virtual ::CCMGenerator::CCM_CADBackendHome
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_CADBackendHomeImpl
// END USER INSERT SECTION INHERITANCE_CADBackendHomeImpl
    {
    
    private:
    
        Components::HomeContext_var context_;
        
    public:
        CADBackendHomeImpl();
        virtual ~CADBackendHomeImpl();
        
        //
        // IDL:Components/HomeExecutorBase/set_context:1.0
        //
        virtual void set_context (Components::HomeContext_ptr ctx)
            throw (CORBA::SystemException, Components::CCMException);
        
        //
        // IDL:.../create:1.0
        //
        virtual ::Components::EnterpriseComponent_ptr create()
            throw (CORBA::SystemException, Components::CreateFailure);
    
// BEGIN USER INSERT SECTION CADBackendHomeImpl
// END USER INSERT SECTION CADBackendHomeImpl

    };
    
};

//
// entry point
//
extern "C" {
#ifdef _WIN32
__declspec(dllexport)
#else
#endif
::Components::HomeExecutorBase_ptr create_CADBackendHomeE(void);
}

#endif
