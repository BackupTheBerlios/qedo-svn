//
// generated by Qedo
//

#ifndef _openpmf_ccm_PEP_ManagerImpl_H_
#define _openpmf_ccm_PEP_ManagerImpl_H_


// BEGIN USER INSERT SECTION file_pre

// END USER INSERT SECTION file_pre


#include <CORBA.h>
#include "openpmf_ccm_PEP_ManagerImpl_BUSINESS.h"
#include "component_valuetypes.h"
#include "RefCountBase.h"
#include <string>


// BEGIN USER INSERT SECTION file_post
#include "ServerPEPInterceptor.h"
#include <pep_impl.h>
// END USER INSERT SECTION file_post


namespace openpmf_ccm
{
    
    //
    // executor
    //
    class PEP_ManagerExec
        : public virtual CORBA::LocalObject
        , public virtual ::openpmf_ccm::CCM_PEP_ManagerExec
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_PEP_ManagerExec

// END USER INSERT SECTION INHERITANCE_PEP_ManagerExec
    {
    
    private:
    
        ::openpmf_ccm::CCM_pep_manager_ContextImpl_var context_;
        
    public:
    
        PEP_ManagerExec();
        virtual ~PEP_ManagerExec();
        
        void set_context(::openpmf_ccm::CCM_pep_manager_ContextImpl_ptr context)
            throw (CORBA::SystemException, Components::CCMException);
        
        void configuration_complete()
            throw (CORBA::SystemException, Components::InvalidConfiguration);
        
        void remove()
            throw (CORBA::SystemException);
        
        
        //
        // IDL:openpmf_ccm/pep_manager/policy_name:1.0
        //
        void policy_name(const char* param)
        	throw(CORBA::SystemException);
        char* policy_name()
        	throw(CORBA::SystemException);
    
// BEGIN USER INSERT SECTION PEP_ManagerExec
    Qedo::ServerPEPInterceptor* server_pep_interceptor_;
    Components::Cookie_var server_cookie_;
    std::string policy_name_;
    PMFIMPL::AbstractPolicyEnforcementPoint* pep_;
// END USER INSERT SECTION PEP_ManagerExec

    };
    
    
    //
    // executor locator
    //
    class PEP_ManagerImpl
        : public virtual CORBA::LocalObject
        , public virtual Components::ExtensionExecutorLocator
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_PEP_ManagerImpl
// END USER INSERT SECTION INHERITANCE_PEP_ManagerImpl
    {
    
    private:
    
        ::openpmf_ccm::CCM_pep_manager_ContextImpl_var context_;
        
        PEP_ManagerExec* component_;
        
    public:
    
        PEP_ManagerImpl();
        virtual ~PEP_ManagerImpl();
        
        
        //
        // IDL:Components/ExecutorLocator/obtain_executor:1.0
        //
        virtual CORBA::Object_ptr obtain_executor(const char* name)
        	throw(CORBA::SystemException);
        
        //
        // IDL:Components/ExecutorLocator/release_executor:1.0
        //
        virtual void release_executor(CORBA::Object_ptr exc)
        	throw(CORBA::SystemException);
        
        //
        // IDL:Components/ExecutorLocator/configuration_complete:1.0
        //
        virtual void configuration_complete()
        	throw(CORBA::SystemException, ::Components::InvalidConfiguration);
        
        //
        // IDL:Components/ExtensionComponent/set_extension_context:1.0
        //
        virtual void set_extension_context(Components::ExtensionContext_ptr ctx)
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/ExtensionComponent/ccm_activate:1.0
        //
        virtual void ccm_activate()
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/ExtensionComponent/ccm_passivate:1.0
        //
        virtual void ccm_passivate()
        	throw(CORBA::SystemException, ::Components::CCMException);
        
        //
        // IDL:Components/ExtensionComponent/ccm_remove:1.0
        //
        virtual void ccm_remove()
        	throw(CORBA::SystemException, ::Components::CCMException);
    
// BEGIN USER INSERT SECTION PEP_ManagerImpl
// END USER INSERT SECTION PEP_ManagerImpl

    };
    
    
    //
    // home executor
    //
    class HomePEP_ManagerExec
        : public virtual CORBA::LocalObject
        , public virtual ::openpmf_ccm::CCM_pep_manager_home
#ifndef MICO_ORB
        , public virtual Qedo::RefCountLocalObject
#endif
// BEGIN USER INSERT SECTION INHERITANCE_HomePEP_ManagerExec
// END USER INSERT SECTION INHERITANCE_HomePEP_ManagerExec
    {
    
    private:
    
        Components::HomeContext_var context_;
        
    public:
        HomePEP_ManagerExec();
        virtual ~HomePEP_ManagerExec();
        
        //
        // IDL:Components/HomeExecutorBase/set_context:1.0
        //
        virtual void set_context (Components::HomeContext_ptr ctx)
            throw (CORBA::SystemException, Components::CCMException);
        
        //
        // IDL:.../create:1.0
        //
        virtual ::Components::EnterpriseComponent_ptr create()
            throw (CORBA::SystemException, Components::CreateFailure);
    
// BEGIN USER INSERT SECTION HomePEP_ManagerExec
// END USER INSERT SECTION HomePEP_ManagerExec

    };
    
};

//
// entry point
//
extern "C" {
#ifdef _WIN32
__declspec(dllexport)
#else
#endif
::Components::HomeExecutorBase_ptr create_pep_manager_homeE(void);
}

#endif
