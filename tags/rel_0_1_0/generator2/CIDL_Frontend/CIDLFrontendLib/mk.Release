# Configuration Release
ProjectName=CIDLFrontendLib
OutDir=./Release
IntDir=./Release
Name=Release
CFLAGS=-I -O1
CXXFLAGS=-I -O1
LIBS=-L../../..//CIDL_Repository/IFRidl/./Release -lIFRidl

$(IntDir)/%.o:%.cpp
	$(COMPILE.cc) $(OUTPUT_OPTION) $<

# produce Library

all:  yacc lex $(IntDir)/lib$(ProjectName).a 

$(IntDir)/lib$(ProjectName).a : $(IntDir)/attributes.o $(IntDir)/cg_io.o $(IntDir)/cidl.o $(IntDir)/cidl_attributes.o $(IntDir)/debug.o $(IntDir)/error.o $(IntDir)/frontend.o $(IntDir)/getopt.o $(IntDir)/getopt1.o $(IntDir)/global.o $(IntDir)/k.o $(IntDir)/lexana.o $(IntDir)/options.o $(IntDir)/pretty.o $(IntDir)/print_idl.o $(IntDir)/printer.o $(IntDir)/repository.o $(IntDir)/resolve_symtab.o $(IntDir)/symtab.o $(IntDir)/tree.o $(IntDir)/unpk.o $(IntDir)/util.o $(IntDir)/version.o 
	$(AR) $(ARFLAGS) $@ $^

$(IntDir)/attributes.o:	./attributes.cpp
$(IntDir)/cg_io.o:	./cg_io.cpp
$(IntDir)/cidl.o:	./cidl.cpp
$(IntDir)/cidl_attributes.o:	./cidl_attributes.cpp
$(IntDir)/debug.o:	./debug.cpp
$(IntDir)/error.o:	./error.cpp
$(IntDir)/frontend.o:	./frontend.cpp
$(IntDir)/getopt.o:	./getopt.c
$(IntDir)/getopt1.o:	./getopt1.c
$(IntDir)/global.o:	./global.cpp
$(IntDir)/k.o:	./k.cpp
$(IntDir)/lexana.o:	./lexana.cpp
$(IntDir)/options.o:	./options.cpp
$(IntDir)/pretty.o:	./pretty.cpp
$(IntDir)/print_idl.o:	./print_idl.cpp
$(IntDir)/printer.o:	./printer.cpp
$(IntDir)/repository.o:	./repository.cpp
$(IntDir)/resolve_symtab.o:	./resolve_symtab.cpp
$(IntDir)/symtab.o:	./symtab.cpp
$(IntDir)/tree.o:	./tree.cpp
$(IntDir)/unpk.o:	./unpk.cpp
$(IntDir)/util.o:	./util.cpp
$(IntDir)/version.o:	./version.cpp
cidl:  
idl:  cidl

# CIDL files

# IDL files

lex:  lexana.cpp 

# LEX files
lexana.cpp:./lexana.l
	$(LEX) -tw -Sflex.skel lexana.l  > lexana.cpp 

yacc:   errmsg.cpp 

# YACC files
:./cidl.y
	env LC_ALL=C $(YACC) -y -v -d -o cidl.cpp cidl.y ; cp cidl.hpp cidl.h 
errmsg.cpp:./cidl.output
	"$(PYTHON)" errmsg.py < cidl.output > errmsg.cpp 


# Kimwitu files


Kimwitu:  

