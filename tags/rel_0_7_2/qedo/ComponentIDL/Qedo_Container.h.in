/* ComponentIDL/HU_Container.h.in.  Generated from configure.in by autoheader.  */

/* Define the name of the CORBA include file */
#undef CORBA_H

/* Defined if the ORB implements POA */
#undef CORBA_HAVE_POA

/* Define if we use classes for CORBA under visibroker */
#undef CORBA_IS_CLASS

/* Define if we use classes for namespaces under visibroker */
#undef CORBA_MODULE_CLASS_MAPPING

/* Defined if the ORB use C-style mapping */
#undef CORBA_MODULE_C_MAPPING

/* Define if we use namespaces with visibroker */
#undef CORBA_MODULE_NAMESPACE_MAPPING

/* Defined if the ORB has a destroy operation */
#undef CORBA_ORB_HAVE_DESTROY

/* Defined if the ORB has no destroy operation */
#undef CORBA_ORB_HAVE_NO_DESTROY

/* Defined if the init operation for the ORB have 3 arguments */
#undef CORBA_ORB_INIT_HAVE_3_ARGS

/* Define the third argument to ORB_init() */
#undef CORBA_ORB_INIT_THIRD_ARG

/* Define the suffix part for skeleton files generated by the idl compiler */
#undef CORBA_SKELETON_SUFFIX

/* Defined if exeception could be pass to cout */
#undef CORBA_SYSTEM_EXCEPTION_IS_STREAMBLE

/* Define the name of the COSNaming include file */
#undef COSNAMING_H

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define if JTC is present. */
#undef HAVE_JTC

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* define if the compiler implements namespaces */
#undef HAVE_NAMESPACES

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define the suffix for c++ client implementation files */
#undef IDL_CLN_CPP_SUFFIX

/* Define the suffix for c++ client include files */
#undef IDL_CLN_H

/* Define the suffix for c++ client include files */
#undef IDL_CLN_H_SUFFIX

/* Define the suffix for c++ server implementation files */
#undef IDL_SRV_CPP_SUFFIX

/* Define the suffix for c++ server include files */
#undef IDL_SRV_H_SUFFIX

/* Define if mico is present */
#undef MICO

/* Defined if omniORB is present */
#undef OMNIORB

/* Defined if ORBacus is present */
#undef ORBACUS

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Defined if TAO is present */
#undef RSSH_TAO

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Defined ... */
#undef TAO_HAVE_IORTABLE_ADAPTER

/* Defined if we have a PortableServer.h */
#undef TAO_HAVE_PORTABLE_SERVER_H

/* Defined if visibroker is present */
#undef VISIBROKER


#ifndef __CAT2_FF 
#define __CAT2_FF(x,y) <##x##y##> 
#endif 

#ifndef __CAT2_F 
#define __CAT2_F(x,y) __CAT2_FF(x,y) 
#endif 
#define CORBA_STUB_HEADER(x) __CAT2_F(x,IDL_CLN_H_SUFFIX) 
#define CORBA_SKELETON_HEADER(x) __CAT2_F(x,IDL_SRV_H_SUFFIX)

