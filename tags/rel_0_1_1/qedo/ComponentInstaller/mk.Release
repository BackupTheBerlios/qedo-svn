# Configuration Release
ProjectName=ComponentInstaller
OutDir=Release
IntDir=Release
Name=Release
CFLAGS=-I -O2 -g
CXXFLAGS=-I -O2 -g
LIBS=-L -L../ComponentIDL/./Release -lComponentIDL

$(IntDir)/%.o:%.cpp
	$(COMPILE.cc) $(OUTPUT_OPTION) $<

# produce Executable
LDLIBS+=$(LIBS)

CC=$(CXX)

all:  $(OutDir)/ComponentInstaller 

$(OutDir)/ComponentInstaller : $(IntDir)/CatalogResolver.o $(IntDir)/ComponentImplementation.o $(IntDir)/ComponentInstallationImpl.o $(IntDir)/DOMOutput.o $(IntDir)/DOMTreeErrorReporter.o $(IntDir)/DOMXMLParser.o $(IntDir)/libunzip.o $(IntDir)/NameServiceBase.o $(IntDir)/Package.o $(IntDir)/PlatformBase.o $(IntDir)/XMLCatalog.o $(IntDir)/main.o 
	$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@

$(IntDir)/CatalogResolver.o:	CatalogResolver.cpp
$(IntDir)/ComponentImplementation.o:	ComponentImplementation.cpp
$(IntDir)/ComponentInstallationImpl.o:	ComponentInstallationImpl.cpp
$(IntDir)/DOMOutput.o:	DOMOutput.cpp
$(IntDir)/DOMTreeErrorReporter.o:	DOMTreeErrorReporter.cpp
$(IntDir)/DOMXMLParser.o:	DOMXMLParser.cpp
$(IntDir)/libunzip.o:	libunzip.cpp
$(IntDir)/NameServiceBase.o:	NameServiceBase.cpp
$(IntDir)/Package.o:	Package.cpp
$(IntDir)/PlatformBase.o:	PlatformBase.cpp
$(IntDir)/XMLCatalog.o:	XMLCatalog.cpp
$(IntDir)/main.o:	main.cpp
cidl:  
idl:  cidl

# CIDL files

# IDL files

lex:  

# LEX files

yacc:  

# YACC files


# Kimwitu files


Kimwitu:  

